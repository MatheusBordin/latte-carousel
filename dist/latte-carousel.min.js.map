{"version":3,"sources":["webpack://latte/webpack/universalModuleDefinition","webpack://latte/webpack/bootstrap","webpack://latte/./src/ts/option/options.ts","webpack://latte/./src/ts/event/event-emitter.ts","webpack://latte/./src/ts/option/responsive-map.ts","webpack://latte/./src/ts/index.ts","webpack://latte/./src/ts/carousel.ts","webpack://latte/./src/ts/stage.ts","webpack://latte/./src/ts/tween.ts","webpack://latte/./src/ts/ui/autoplay.ts","webpack://latte/./src/ts/ui/buttons.ts","webpack://latte/./src/ts/ui/dots.ts","webpack://latte/./src/ts/ui/touch.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","responsive_map_1","Options","options","this","count","padding","touch","buttons","dots","rewind","autoplay","animation","prop","responsive","ResponsiveMap","getBreakpointOptions","screenWidth","innerWidth","document","body","clientWidth","matchOption","matchBreakpoint","option","breakpoint","parseInt","EventEmitter","listeners","on","event","listener","bucket","push","trigger","data","_i","bucket_1","length","off","options_1","map","globalOptions","responsiveOptions","carousel_1","Carousel","event_emitter_1","stage_1","autoplay_1","buttons_1","dots_1","touch_1","_super","elementOrSelector","_this","carouselElement","querySelector","Error","originalHtml","innerHTML","createContainers","contentElement","children","stageElement","itemElements","stage","Stage","Touch","Buttons","Dots","Autoplay","onWindowResizeListener","onWindowResize","addEventListener","onStageMove","update","onCarouselPrevious","onCarouselNext","onCarouselGoto","__extends","remove","removeEventListener","move","moveTo","tween_1","currentIndex","currentPosition","currentOptions","contentSize","getBoundingClientRect","width","itemSize","stageSize","style","delta","tween","index","lastIndex","last","Math","min","max","duration","Tween","translate","drag","lastPosition","dragEnd","movedLeft","ceil","abs","floor","current","element","x","y","source","getTranslate","animate","progress","interpolate","setTranslate","callback","start","Date","getTime","loop","relative","requestFrame","transform","match","exec","parseFloat","requestAnimationFrame","setTimeout","dest","amount","easeOutCubic","b","intervalId","mouseOver","onMouseEnter","onMouseLeave","clearInterval","setInterval","onInterval","previousButton","createButton","nextButton","insertBefore","appendChild","onPreviousClick","onNextClick","className","clazz","createElement","createContainer","dotsContainer","createDots","updateActive","dotCount","html","querySelectorAll","onDotClick","dot","getAttribute","nextIndex","nextDot","setAttribute","target","firstX","previousX","previousY","distanceX","distanceY","minDistance","state","onTouchStart","passive","onTouchMove","onTouchEnd","touches","clientX","clientY","deltaX","deltaY","dragDistance","horizontalDrag","cancelable","preventDefault"],"mappings":"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","file":"latte-carousel.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"latte\"] = factory();\n\telse\n\t\troot[\"latte\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import { ResponsiveMap } from \"./responsive-map\";\r\n\r\n/**\r\n * Carousel options.\r\n *\r\n * @export\r\n * @class Options\r\n */\r\nexport class Options {\r\n    public count: number = 3;\r\n    public padding: number = 0;\r\n    public touch: boolean = false;\r\n    public buttons: boolean = true;\r\n    public dots: boolean = false;\r\n    public rewind: boolean = true;\r\n    public autoplay: number = 0;\r\n    public animation: number = 500;\r\n\r\n    public responsive: ResponsiveMap;\r\n\r\n    /**\r\n     * Creates an instance of Options.\r\n     * @param {Options} [options] Options to copy properties.\r\n     * @memberof Options\r\n     */\r\n    constructor(options?: Options) {\r\n        if (options == null) {\r\n            return;\r\n        }\r\n\r\n        for (const prop in options) {\r\n            if (options.hasOwnProperty(prop) && prop !== \"responsive\") {\r\n                (this as any)[prop] = (options as any)[prop];\r\n            }\r\n        }\r\n\r\n        // Copy responsive properties\r\n        if (options.responsive != null) {\r\n            this.responsive = new ResponsiveMap(options.responsive, this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Finds options based on current breakpoint (screen width).\r\n     *\r\n     * @returns {Options} Carousel options.\r\n     * @memberof Options\r\n     */\r\n    public getBreakpointOptions(): Options {\r\n        if (this.responsive == null) {\r\n            return this;\r\n        }\r\n\r\n        // Get current screen width\r\n        const screenWidth = window.innerWidth || document.body.clientWidth;\r\n\r\n        // Find matched breakpoint option\r\n        let matchOption: Options = null;\r\n        let matchBreakpoint = 0;\r\n\r\n        for (const key in this.responsive) {\r\n            if (this.responsive.hasOwnProperty(key)) {\r\n                const option = this.responsive[key];\r\n                const breakpoint = parseInt(key, 10);\r\n\r\n                if (breakpoint >= matchBreakpoint && breakpoint <= screenWidth) {\r\n                    matchOption = option;\r\n                    matchBreakpoint = breakpoint;\r\n                }\r\n            }\r\n        }\r\n\r\n        return matchOption;\r\n    }\r\n}\r\n","import { IListenerMap } from \"./listener-map\";\r\n\r\n/**\r\n * Basic event emitter implementation.\r\n *\r\n * @export\r\n * @class EventEmitter\r\n */\r\nexport class EventEmitter {\r\n    private listeners: IListenerMap = {};\r\n\r\n    /**\r\n     * Adds a new event listener.\r\n     *\r\n     * @param {string} event Event type.\r\n     * @param {(data?: any) => void} listener Event listener.\r\n     * @memberof EventEmitter\r\n     */\r\n    public on(event: string, listener: (data?: any) => void) {\r\n        let bucket = this.listeners[event];\r\n\r\n        if (bucket == null) {\r\n            this.listeners[event] = bucket = [];\r\n        }\r\n\r\n        bucket.push(listener);\r\n    }\r\n\r\n    /**\r\n     * Triggers all listeners by event type.\r\n     *\r\n     * @param {string} event Event type.\r\n     * @param {*} [data] Event data.\r\n     * @memberof EventEmitter\r\n     */\r\n    public trigger(event: string, data?: any) {\r\n        const bucket = this.listeners[event];\r\n\r\n        if (bucket != null) {\r\n            for (const listener of bucket) {\r\n                listener(data);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clears all listeners.\r\n     *\r\n     * @memberof EventEmitter\r\n     */\r\n    public off() {\r\n        this.listeners = {};\r\n    }\r\n}\r\n","import { Options } from \"./options\";\r\n\r\n/**\r\n * Responsive options map.\r\n *\r\n * @export\r\n * @class ResponsiveMap\r\n */\r\nexport class ResponsiveMap {\r\n    [breakpoint: string]: Options;\r\n\r\n    /**\r\n     * Creates an instance of ResponsiveMap.\r\n     * @param {ResponsiveMap} [map] Map to copy properties.\r\n     * @param {Options} [globalOptions] Options to use as default.\r\n     * @memberof ResponsiveMap\r\n     */\r\n    constructor(map?: ResponsiveMap, globalOptions?: Options) {\r\n        if (map == null) {\r\n            return;\r\n        }\r\n\r\n        // Instantiate options keeping global properties.\r\n        for (const breakpoint in map) {\r\n            if (map.hasOwnProperty(breakpoint)) {\r\n                const responsiveOptions = new Options((map as any)[breakpoint]);\r\n\r\n                // Copy from global options\r\n                if (globalOptions != null) {\r\n                    for (const prop in globalOptions) {\r\n                        if (\r\n                            globalOptions.hasOwnProperty(prop) &&\r\n                            prop !== \"responsive\" &&\r\n                            (map as any)[breakpoint][prop] == null\r\n                        ) {\r\n                            (responsiveOptions as any)[prop] = (globalOptions as any)[prop];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                (this as any)[breakpoint] = responsiveOptions;\r\n            }\r\n        }\r\n    }\r\n}\r\n","export { Carousel } from \"./carousel\";\r\nexport { Options } from \"./option/options\";\r\nexport { ResponsiveMap } from \"./option/responsive-map\";\r\n","import { EventEmitter } from \"./event/event-emitter\";\r\nimport { Options } from \"./option/options\";\r\nimport { Stage } from \"./stage\";\r\nimport { Autoplay } from \"./ui/autoplay\";\r\nimport { Buttons } from \"./ui/buttons\";\r\nimport { Dots } from \"./ui/dots\";\r\nimport { Touch } from \"./ui/touch\";\r\n\r\n// tslint:disable-next-line\r\nrequire(\"../scss/style.scss\");\r\n\r\n/**\r\n * Base carousel class.\r\n *\r\n * @export\r\n * @class Carousel\r\n * @extends {EventEmitter}\r\n */\r\nexport class Carousel extends EventEmitter {\r\n    private carouselElement: HTMLElement;\r\n    private contentElement: HTMLElement;\r\n    private stageElement: HTMLElement;\r\n    private itemElements: HTMLCollection;\r\n\r\n    private options: Options;\r\n    private stage: Stage;\r\n    private touch: Touch;\r\n    private buttons: Buttons;\r\n    private dots: Dots;\r\n    private autoplay: Autoplay;\r\n\r\n    private originalHtml: string;\r\n\r\n    private onWindowResizeListener: (event: UIEvent) => void;\r\n\r\n    /**\r\n     * Creates an instance of Carousel.\r\n     * @param {(string | HTMLElement)} elementOrSelector Root carousel element or selector.\r\n     * @param {Options} [options] Carousel options.\r\n     * @memberof Carousel\r\n     */\r\n    constructor(elementOrSelector: string | HTMLElement, options?: Options) {\r\n        super();\r\n\r\n        if (typeof elementOrSelector === \"string\") {\r\n            this.carouselElement = document.querySelector(elementOrSelector);\r\n        } else {\r\n            this.carouselElement = elementOrSelector;\r\n        }\r\n\r\n        if (this.carouselElement == null) {\r\n            throw new Error(\"Missing root latte-carousel element.\");\r\n        }\r\n\r\n        this.originalHtml = this.carouselElement.innerHTML;\r\n\r\n        this.createContainers();\r\n\r\n        this.contentElement = this.carouselElement.children[0] as HTMLElement;\r\n        this.stageElement = this.contentElement.children[0] as HTMLElement;\r\n        this.itemElements = this.stageElement.children;\r\n\r\n        this.options = new Options(options);\r\n        this.stage = new Stage(this.contentElement, this.stageElement, this.itemElements, this.options);\r\n        this.touch = new Touch(this.contentElement, this.stage, this.options);\r\n        this.buttons = new Buttons(this.carouselElement, this.contentElement, this.stage, this.options);\r\n        this.dots = new Dots(this.carouselElement, this.stage, this.options);\r\n        this.autoplay = new Autoplay(this.contentElement, this.stage, this.options);\r\n\r\n        this.onWindowResizeListener = this.onWindowResize.bind(this);\r\n\r\n        window.addEventListener(\"resize\", this.onWindowResizeListener);\r\n\r\n        this.stage.on(\"move\", this.onStageMove.bind(this));\r\n\r\n        this.update();\r\n\r\n        this.on(\"previous\", this.onCarouselPrevious.bind(this));\r\n        this.on(\"next\", this.onCarouselNext.bind(this));\r\n        this.on(\"goto\", this.onCarouselGoto.bind(this));\r\n    }\r\n\r\n    /**\r\n     * Removes carousel.\r\n     *\r\n     * @memberof Carousel\r\n     */\r\n    public remove() {\r\n        this.autoplay.remove();\r\n\r\n        window.removeEventListener(\"resize\", this.onWindowResizeListener);\r\n\r\n        this.off();\r\n\r\n        this.carouselElement.innerHTML = this.originalHtml;\r\n    }\r\n\r\n    /**\r\n     * Creates content and stage containers.\r\n     *\r\n     * @private\r\n     * @memberof Carousel\r\n     */\r\n    private createContainers() {\r\n        this.carouselElement.innerHTML = `\r\n            <div class=\"latte-content\">\r\n                <div class=\"latte-stage\">\r\n                    ${this.carouselElement.innerHTML}\r\n                </div>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Updates carousel.\r\n     *\r\n     * @private\r\n     * @memberof Carousel\r\n     */\r\n    private update() {\r\n        this.stage.update();\r\n\r\n        this.touch.update();\r\n\r\n        this.buttons.update();\r\n\r\n        this.dots.update();\r\n\r\n        this.autoplay.update();\r\n    }\r\n\r\n    /**\r\n     * Window resize listener.\r\n     *\r\n     * @private\r\n     * @param {UIEvent} event UI Event.\r\n     * @memberof Carousel\r\n     */\r\n    private onWindowResize(event: UIEvent) {\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Stage move listener.\r\n     *\r\n     * @private\r\n     * @param {*} data Event data.\r\n     * @memberof Carousel\r\n     */\r\n    private onStageMove(data: any) {\r\n        this.dots.update();\r\n    }\r\n\r\n    /**\r\n     * Carousel previous listener.\r\n     *\r\n     * @private\r\n     * @param {*} data Event data.\r\n     * @memberof Carousel\r\n     */\r\n    private onCarouselPrevious(data: any) {\r\n        this.stage.move(-1);\r\n    }\r\n\r\n    /**\r\n     * Carousel next listener.\r\n     *\r\n     * @private\r\n     * @param {*} data Event data.\r\n     * @memberof Carousel\r\n     */\r\n    private onCarouselNext(data: any) {\r\n        this.stage.move(1);\r\n    }\r\n\r\n    /**\r\n     * Carousel goto listener.\r\n     *\r\n     * @private\r\n     * @param {*} data Event data.\r\n     * @memberof Carousel\r\n     */\r\n    private onCarouselGoto(data: any) {\r\n        this.stage.moveTo(data as number);\r\n    }\r\n}\r\n","import { EventEmitter } from \"./event/event-emitter\";\r\nimport { Options } from \"./option/options\";\r\nimport { Tween } from \"./tween\";\r\n\r\n/**\r\n * Base carousel stage.\r\n *\r\n * @export\r\n * @class Stage\r\n * @extends {EventEmitter}\r\n */\r\nexport class Stage extends EventEmitter {\r\n    private currentOptions: Options;\r\n\r\n    private currentIndex: number = 0;\r\n    private currentPosition: number = 0;\r\n\r\n    private contentSize: number;\r\n    private stageSize: number;\r\n    private itemSize: number;\r\n\r\n    /**\r\n     * Creates an instance of Stage.\r\n     * @param {HTMLElement} contentElement Content element.\r\n     * @param {HTMLElement} stageElement Stage element.\r\n     * @param {HTMLCollection} itemElements Items elements.\r\n     * @param {Options} options Carousel options.\r\n     * @memberof Stage\r\n     */\r\n    constructor(\r\n        private contentElement: HTMLElement,\r\n        private stageElement: HTMLElement,\r\n        private itemElements: HTMLCollection,\r\n        private options: Options,\r\n    ) {\r\n        super();\r\n\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Updates stage computing options and position.\r\n     *\r\n     * @memberof Stage\r\n     */\r\n    public update() {\r\n        this.currentOptions = this.options.getBreakpointOptions();\r\n\r\n        // Compute size\r\n        this.contentSize = this.contentElement.getBoundingClientRect().width;\r\n        this.itemSize = this.contentSize / this.currentOptions.count;\r\n        this.stageSize = this.itemSize * this.itemElements.length;\r\n\r\n        // Apply size\r\n        for (let i = 0; i < this.itemElements.length; i++) {\r\n            const itemElement = this.itemElements[i] as HTMLElement;\r\n\r\n            itemElement.style.width = this.itemSize + \"px\";\r\n        }\r\n\r\n        this.stageElement.style.width = this.stageSize + \"px\";\r\n\r\n        // Adjust position\r\n        this.move(0, false);\r\n    }\r\n\r\n    /**\r\n     * Moves stage to relative index.\r\n     *\r\n     * @param {number} delta Index delta.\r\n     * @param {boolean} [tween=true] Use tweening\r\n     * @memberof Stage\r\n     */\r\n    public move(delta: number, tween: boolean = true) {\r\n        this.moveTo(this.currentIndex + delta, tween);\r\n    }\r\n\r\n    /**\r\n     * Moves stage to absolute index.\r\n     *\r\n     * @param {number} index Index.\r\n     * @param {boolean} [tween=true] Use tweening\r\n     * @memberof Stage\r\n     */\r\n    public moveTo(index: number, tween: boolean = true) {\r\n        const firstIndex = 0;\r\n        const lastIndex = this.last();\r\n\r\n        // Rewind index\r\n        if (this.currentOptions.rewind) {\r\n            index = index % (lastIndex + 1);\r\n\r\n            if (index < 0) {\r\n                index = lastIndex + 1 + index;\r\n            }\r\n        }\r\n\r\n        // Compute position by index\r\n        this.currentIndex = index;\r\n        this.currentIndex = Math.min(Math.max(firstIndex, this.currentIndex), lastIndex);\r\n        this.currentPosition = this.currentIndex * this.itemSize * -1;\r\n\r\n        const duration = tween ? this.currentOptions.animation : 0;\r\n        Tween.translate(this.stageElement, this.currentPosition, 0, duration);\r\n\r\n        this.trigger(\"move\");\r\n    }\r\n\r\n    /**\r\n     * Drags stage to relative position.\r\n     *\r\n     * @param {number} delta Position delta.\r\n     * @memberof Stage\r\n     */\r\n    public drag(delta: number) {\r\n        const lastIndex = this.last();\r\n\r\n        const firstPosition = 0;\r\n        const lastPosition = lastIndex * this.itemSize * -1;\r\n\r\n        // Change position only\r\n        this.currentPosition += delta;\r\n        this.currentPosition = Math.min(Math.max(lastPosition, this.currentPosition), firstPosition);\r\n\r\n        Tween.translate(this.stageElement, this.currentPosition, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * Finishes carousel drag.\r\n     *\r\n     * @param {boolean} movedLeft If carousel moved to the left.\r\n     * @memberof Stage\r\n     */\r\n    public dragEnd(movedLeft: boolean) {\r\n        // Compute index by position\r\n        if (movedLeft) {\r\n            this.currentIndex = Math.ceil(Math.abs(this.currentPosition) / this.itemSize);\r\n        } else {\r\n            this.currentIndex = Math.floor(Math.abs(this.currentPosition) / this.itemSize);\r\n        }\r\n\r\n        this.move(0);\r\n    }\r\n\r\n    /**\r\n     * Returns carousel item count.\r\n     *\r\n     * @returns {number} Item count.\r\n     * @memberof Stage\r\n     */\r\n    public count(): number {\r\n        return this.itemElements.length;\r\n    }\r\n\r\n    /**\r\n     * Returns current index.\r\n     *\r\n     * @returns {number} Current index.\r\n     * @memberof Stage\r\n     */\r\n    public current(): number {\r\n        return this.currentIndex;\r\n    }\r\n\r\n    /**\r\n     * Returns last index.\r\n     *\r\n     * @returns {number} Last index.\r\n     * @memberof Stage\r\n     */\r\n    public last(): number {\r\n        return this.itemElements.length - this.currentOptions.count;\r\n    }\r\n}\r\n","/**\r\n * Basic tweening implementation.\r\n *\r\n * @export\r\n * @class Tween\r\n */\r\nexport class Tween {\r\n    /**\r\n     * Translates the element to position.\r\n     *\r\n     * @static\r\n     * @param {HTMLElement} element Element to translate.\r\n     * @param {number} x X position.\r\n     * @param {number} y Y position.\r\n     * @param {number} duration Duration in millis.\r\n     * @memberof Tween\r\n     */\r\n    public static translate(element: HTMLElement, x: number, y: number, duration: number) {\r\n        const source = this.getTranslate(element);\r\n\r\n        this.animate(duration, (progress) => {\r\n            const value = {\r\n                x: this.interpolate(source.x, x, progress),\r\n                y: this.interpolate(source.y, y, progress),\r\n            };\r\n\r\n            this.setTranslate(element, value);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Animates using callback loop.\r\n     *\r\n     * @private\r\n     * @static\r\n     * @param {number} duration Duration in millis.\r\n     * @param {(progress: number) => void} callback Animation callback.\r\n     * @memberof Tween\r\n     */\r\n    private static animate(duration: number, callback: (progress: number) => void) {\r\n        if (duration === 0) {\r\n            callback(1);\r\n            return;\r\n        }\r\n\r\n        const start = new Date().getTime();\r\n\r\n        const loop = () => {\r\n            const now = new Date().getTime();\r\n            const relative = (now - start) / duration;\r\n            const progress = Math.min(relative, 1);\r\n\r\n            callback(progress);\r\n\r\n            if (progress < 1) {\r\n                this.requestFrame(loop);\r\n            }\r\n        };\r\n\r\n        this.requestFrame(loop);\r\n    }\r\n\r\n    /**\r\n     * Gets current translate value.\r\n     *\r\n     * @private\r\n     * @static\r\n     * @param {HTMLElement} element Element to get value.\r\n     * @returns {{ x: number, y: number }} Translate value.\r\n     * @memberof Tween\r\n     */\r\n    private static getTranslate(element: HTMLElement): { x: number; y: number } {\r\n        const source = { x: 0, y: 0 };\r\n\r\n        const regex = /translate\\(([0-9.-]+)px,\\s?([0-9.-]+)px\\)/;\r\n        const value = (element.style as any)[\"-ms-transform\"] || element.style.transform;\r\n\r\n        if (value != null) {\r\n            const match = regex.exec(value);\r\n\r\n            if (match != null) {\r\n                source.x = parseFloat(match[1]);\r\n                source.y = parseFloat(match[2]);\r\n            }\r\n        }\r\n\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * Sets translate value.\r\n     *\r\n     * @private\r\n     * @static\r\n     * @param {HTMLElement} element Element to set value.\r\n     * @param {{ x: number, y: number }} value Translate value.\r\n     * @memberof Tween\r\n     */\r\n    private static setTranslate(element: HTMLElement, value: { x: number; y: number }) {\r\n        const transform = `translate(${Math.ceil(value.x)}px, ${Math.ceil(value.y)}px)`;\r\n\r\n        (element.style as any)[\"-ms-transform\"] = transform;\r\n        element.style.transform = transform;\r\n    }\r\n\r\n    /**\r\n     * Request animation frame helper.\r\n     *\r\n     * @private\r\n     * @static\r\n     * @param {() => void} callback Animation frame callback.\r\n     * @memberof Tween\r\n     */\r\n    private static requestFrame(callback: () => void) {\r\n        if (requestAnimationFrame != null) {\r\n            requestAnimationFrame(callback);\r\n        } else {\r\n            window.setTimeout(callback, 1000 / 60);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Interpolates two numbers.\r\n     *\r\n     * @private\r\n     * @static\r\n     * @param {number} source Source value.\r\n     * @param {number} dest Destination value.\r\n     * @param {number} amount Percentage.\r\n     * @returns {number} Interpolated value.\r\n     * @memberof Tween\r\n     */\r\n    private static interpolate(source: number, dest: number, amount: number): number {\r\n        return this.easeOutCubic(amount, source, dest - source, 1);\r\n    }\r\n\r\n    /**\r\n     * Cubic easing out function.\r\n     * Inspired from: http://robertpenner.com/easing/penner_easing_as1.txt\r\n     *\r\n     * @private\r\n     * @static\r\n     * @param {number} t Time.\r\n     * @param {number} b Base value.\r\n     * @param {number} c Change in value.\r\n     * @param {number} d Duration.\r\n     * @returns {number} Interpolated value.\r\n     * @memberof Tween\r\n     */\r\n    private static easeOutCubic(t: number, b: number, c: number, d: number): number {\r\n        return c * ((t = t / d - 1) * t * t + 1) + b;\r\n    }\r\n}\r\n","import { Options } from \"../option/options\";\r\nimport { Stage } from \"../stage\";\r\n\r\n/**\r\n * Carousel autoplay.\r\n *\r\n * @export\r\n * @class Autoplay\r\n */\r\nexport class Autoplay {\r\n    private currentOptions: Options;\r\n\r\n    private intervalId: number = 0;\r\n    private mouseOver: boolean = false;\r\n\r\n    /**\r\n     * Creates an instance of Autoplay.\r\n     * @param {HTMLElement} contentElement Content element.\r\n     * @param {Stage} stage Carousel stage.\r\n     * @param {Options} options Carousel options.\r\n     * @memberof Autoplay\r\n     */\r\n    constructor(private contentElement: HTMLElement, private stage: Stage, private options: Options) {\r\n        this.contentElement.addEventListener(\"mouseenter\", this.onMouseEnter.bind(this));\r\n        this.contentElement.addEventListener(\"mouseleave\", this.onMouseLeave.bind(this));\r\n\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Updates carousel autoplay.\r\n     *\r\n     * @memberof Autoplay\r\n     */\r\n    public update() {\r\n        this.currentOptions = this.options.getBreakpointOptions();\r\n\r\n        // Clear current interval\r\n        if (this.intervalId > 0) {\r\n            clearInterval(this.intervalId);\r\n        }\r\n\r\n        if (this.currentOptions.autoplay > 0) {\r\n            this.intervalId = setInterval(this.onInterval.bind(this), this.currentOptions.autoplay);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes autoplay.\r\n     *\r\n     * @memberof Autoplay\r\n     */\r\n    public remove() {\r\n        if (this.intervalId > 0) {\r\n            clearInterval(this.intervalId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Interval listener.\r\n     *\r\n     * @private\r\n     * @memberof Autoplay\r\n     */\r\n    private onInterval() {\r\n        if (!this.mouseOver) {\r\n            this.stage.move(1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Mouse enter listener.\r\n     *\r\n     * @private\r\n     * @memberof Autoplay\r\n     */\r\n    private onMouseEnter() {\r\n        this.mouseOver = true;\r\n    }\r\n\r\n    /**\r\n     * Mouse leave listener.\r\n     *\r\n     * @private\r\n     * @memberof Autoplay\r\n     */\r\n    private onMouseLeave() {\r\n        this.mouseOver = false;\r\n    }\r\n}\r\n","import { Options } from \"../option/options\";\r\nimport { Stage } from \"../stage\";\r\n\r\n/**\r\n * Carousel buttons.\r\n *\r\n * @export\r\n * @class Buttons\r\n */\r\nexport class Buttons {\r\n    private currentOptions: Options;\r\n\r\n    private previousButton: HTMLElement;\r\n    private nextButton: HTMLElement;\r\n\r\n    /**\r\n     * Creates an instance of Buttons.\r\n     * @param {HTMLElement} carouselElement Carousel element.\r\n     * @param {HTMLElement} contentElement Content element.\r\n     * @param {Stage} stage Carousel stage.\r\n     * @param {Options} options Carousel options.\r\n     * @memberof Buttons\r\n     */\r\n    constructor(\r\n        private carouselElement: HTMLElement,\r\n        private contentElement: HTMLElement,\r\n        private stage: Stage,\r\n        private options: Options,\r\n    ) {\r\n        this.previousButton = this.createButton(\"latte-previous\");\r\n        this.nextButton = this.createButton(\"latte-next\");\r\n\r\n        this.carouselElement.insertBefore(this.previousButton, this.contentElement);\r\n        this.carouselElement.appendChild(this.nextButton);\r\n\r\n        this.previousButton.addEventListener(\"click\", this.onPreviousClick.bind(this));\r\n        this.nextButton.addEventListener(\"click\", this.onNextClick.bind(this));\r\n\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Updates carousel buttons.\r\n     *\r\n     * @memberof Buttons\r\n     */\r\n    public update() {\r\n        this.currentOptions = this.options.getBreakpointOptions();\r\n\r\n        if (this.currentOptions.buttons === true) {\r\n            this.previousButton.className = \"latte-previous\";\r\n            this.nextButton.className = \"latte-next\";\r\n        } else {\r\n            this.previousButton.className = \"latte-previous invisible\";\r\n            this.nextButton.className = \"latte-next invisible\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates a new button.\r\n     *\r\n     * @private\r\n     * @param {string} clazz Element class.\r\n     * @returns {HTMLElement} Element created.\r\n     * @memberof Buttons\r\n     */\r\n    private createButton(clazz: string): HTMLElement {\r\n        const element = document.createElement(\"div\");\r\n        element.className = clazz;\r\n\r\n        return element;\r\n    }\r\n\r\n    /**\r\n     * Previous click listener.\r\n     *\r\n     * @private\r\n     * @param {MouseEvent} event Mouse event.\r\n     * @memberof Buttons\r\n     */\r\n    private onPreviousClick(event: MouseEvent) {\r\n        this.stage.move(-1);\r\n    }\r\n\r\n    /**\r\n     * Next click listener.\r\n     *\r\n     * @private\r\n     * @param {MouseEvent} event Mouse event.\r\n     * @memberof Buttons\r\n     */\r\n    private onNextClick(event: MouseEvent) {\r\n        this.stage.move(1);\r\n    }\r\n}\r\n","import { Options } from \"../option/options\";\r\nimport { Stage } from \"../stage\";\r\n\r\n/**\r\n * Carousel navigation dots.\r\n *\r\n * @export\r\n * @class Dots\r\n */\r\nexport class Dots {\r\n    private currentOptions: Options;\r\n\r\n    private dotsContainer: HTMLElement;\r\n    private dots: NodeListOf<HTMLElement>;\r\n\r\n    /**\r\n     * Creates an instance of Dots.\r\n     * @param {HTMLElement} carouselElement Carousel element.\r\n     * @param {Stage} stage Carousel stage.\r\n     * @param {Options} options Carousel options.\r\n     * @memberof Dots\r\n     */\r\n    constructor(private carouselElement: HTMLElement, private stage: Stage, private options: Options) {\r\n        this.createContainer();\r\n\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Updates carousel dots.\r\n     *\r\n     * @memberof Dots\r\n     */\r\n    public update() {\r\n        this.currentOptions = this.options.getBreakpointOptions();\r\n\r\n        if (this.currentOptions.dots === true) {\r\n            this.dotsContainer.className = \"latte-dots\";\r\n\r\n            this.createDots();\r\n\r\n            this.updateActive();\r\n        } else {\r\n            this.dotsContainer.className = \"latte-dots invisible\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates the dots container.\r\n     *\r\n     * @private\r\n     * @memberof Dots\r\n     */\r\n    private createContainer() {\r\n        this.dotsContainer = document.createElement(\"div\");\r\n        this.dotsContainer.className = \"latte-dots\";\r\n\r\n        this.carouselElement.appendChild(this.dotsContainer);\r\n    }\r\n\r\n    /**\r\n     * Creates the dots itself.\r\n     *\r\n     * @private\r\n     * @memberof Dots\r\n     */\r\n    private createDots() {\r\n        const count = this.dotCount();\r\n\r\n        // Avoid recreation\r\n        if (this.dots != null && this.dots.length === count) {\r\n            return;\r\n        }\r\n\r\n        // Build elements\r\n        let html = \"\";\r\n\r\n        for (let i = 0; i < count; i++) {\r\n            let index = i * Math.ceil(this.currentOptions.count);\r\n            index = Math.min(index, this.stage.last());\r\n\r\n            html += `<div class=\"latte-dot\" data-index=${index}></div>`;\r\n        }\r\n\r\n        this.dotsContainer.innerHTML = html;\r\n\r\n        this.dots = this.dotsContainer.querySelectorAll(\".latte-dot\");\r\n\r\n        // Add events\r\n        for (let i = 0; i < this.dots.length; i++) {\r\n            const dot = this.dots[i];\r\n\r\n            dot.addEventListener(\"click\", this.onDotClick.bind(this));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the active navigation dot.\r\n     *\r\n     * @private\r\n     * @memberof Dots\r\n     */\r\n    private updateActive() {\r\n        for (let i = 0; i < this.dots.length; i++) {\r\n            // Index bounds\r\n            const dot = this.dots[i];\r\n            const index = parseFloat(dot.getAttribute(\"data-index\"));\r\n\r\n            let nextIndex;\r\n            if (i + 1 < this.dots.length) {\r\n                const nextDot = this.dots[i + 1];\r\n                nextIndex = parseFloat(nextDot.getAttribute(\"data-index\"));\r\n            }\r\n\r\n            // Active class\r\n            const active = this.stage.current() >= index && (nextIndex == null || this.stage.current() < nextIndex);\r\n\r\n            const clazz = \"latte-dot\" + (active ? \" active\" : \"\");\r\n\r\n            dot.setAttribute(\"class\", clazz);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns navigation dot count.\r\n     *\r\n     * @private\r\n     * @returns {number} Dot count.\r\n     * @memberof Dots\r\n     */\r\n    private dotCount(): number {\r\n        return Math.ceil(this.stage.count() / Math.ceil(this.currentOptions.count));\r\n    }\r\n\r\n    /**\r\n     * Dot click listener.\r\n     *\r\n     * @private\r\n     * @param {MouseEvent} event Mouse event.\r\n     * @memberof Dots\r\n     */\r\n    private onDotClick(event: MouseEvent) {\r\n        const dot = event.target as HTMLElement;\r\n        const index = parseFloat(dot.getAttribute(\"data-index\"));\r\n\r\n        this.stage.moveTo(index);\r\n\r\n        this.updateActive();\r\n    }\r\n}\r\n","import { Options } from \"../option/options\";\r\nimport { Stage } from \"../stage\";\r\n\r\n/**\r\n * Touch support.\r\n *\r\n * @export\r\n * @class Touch\r\n */\r\nexport class Touch {\r\n    private currentOptions: Options;\r\n\r\n    private firstX = 0;\r\n    private previousX = 0;\r\n    private previousY = 0;\r\n\r\n    private distanceX = 0;\r\n    private distanceY = 0;\r\n    private minDistance = 20;\r\n\r\n    private state: \"free\" | \"drag\" | \"lock\" = \"free\";\r\n\r\n    /**\r\n     * Creates an instance of Touch.\r\n     * @param {HTMLElement} contentElement Content element.\r\n     * @param {Stage} stage Carousel stage.\r\n     * @param {Options} options Carousel options.\r\n     * @memberof Touch\r\n     */\r\n    constructor(private contentElement: HTMLElement, private stage: Stage, private options: Options) {\r\n        this.contentElement.addEventListener(\"touchstart\", this.onTouchStart.bind(this), { passive: true });\r\n        this.contentElement.addEventListener(\"touchmove\", this.onTouchMove.bind(this));\r\n        this.contentElement.addEventListener(\"touchend\", this.onTouchEnd.bind(this), { passive: true });\r\n\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Updates touch support.\r\n     *\r\n     * @memberof Touch\r\n     */\r\n    public update() {\r\n        this.currentOptions = this.options.getBreakpointOptions();\r\n    }\r\n\r\n    /**\r\n     * Touch start listener.\r\n     *\r\n     * @private\r\n     * @param {TouchEvent} event Touch event.\r\n     * @memberof Touch\r\n     */\r\n    private onTouchStart(event: TouchEvent) {\r\n        const touch = event.touches[0];\r\n\r\n        this.firstX = this.previousX = touch.clientX;\r\n        this.previousY = touch.clientY;\r\n\r\n        this.distanceX = this.distanceY = 0;\r\n    }\r\n\r\n    /**\r\n     * Touch move listener.\r\n     *\r\n     * @private\r\n     * @param {TouchEvent} event Touch event.\r\n     * @memberof Touch\r\n     */\r\n    private onTouchMove(event: TouchEvent) {\r\n        const touch = event.touches[0];\r\n\r\n        const deltaX = touch.clientX - this.previousX;\r\n        const deltaY = touch.clientY - this.previousY;\r\n\r\n        this.distanceX += Math.abs(deltaX);\r\n        this.distanceY += Math.abs(deltaY);\r\n\r\n        const dragDistance = this.distanceX > this.minDistance || this.distanceY > this.minDistance;\r\n        const horizontalDrag = this.distanceX > this.distanceY;\r\n\r\n        if (this.currentOptions.touch) {\r\n            // Check for minimum distance and horizontal drag\r\n            if (this.state === \"free\" && dragDistance) {\r\n                if (horizontalDrag) {\r\n                    this.state = \"drag\";\r\n                } else {\r\n                    this.state = \"lock\";\r\n                }\r\n            }\r\n\r\n            // Lock scroll on touch move\r\n            if (this.state === \"drag\") {\r\n                if (event.cancelable) {\r\n                    event.preventDefault();\r\n                }\r\n\r\n                this.stage.drag(deltaX);\r\n            }\r\n        }\r\n\r\n        this.previousX = touch.clientX;\r\n        this.previousY = touch.clientY;\r\n    }\r\n\r\n    /**\r\n     * Touch end listener.\r\n     *\r\n     * @private\r\n     * @param {TouchEvent} event Touch event.\r\n     * @memberof Touch\r\n     */\r\n    private onTouchEnd(event: TouchEvent) {\r\n        const movedLeft = this.firstX > this.previousX;\r\n\r\n        // Prevent disabling touch while dragging\r\n        if (this.currentOptions.touch || this.state === \"drag\") {\r\n            this.state = \"free\";\r\n\r\n            this.stage.dragEnd(movedLeft);\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":""}