{"version":3,"sources":["webpack://latte/webpack/universalModuleDefinition","webpack://latte/webpack/bootstrap","webpack://latte/./src/ts/option/options.ts","webpack://latte/./src/ts/event/event-emitter.ts","webpack://latte/./src/ts/ui/touch.ts","webpack://latte/./src/ts/ui/dots.ts","webpack://latte/./src/ts/ui/buttons.ts","webpack://latte/./src/ts/ui/autoplay.ts","webpack://latte/./src/ts/tween.ts","webpack://latte/./src/ts/stage.ts","webpack://latte/./src/ts/option/responsive-map.ts","webpack://latte/./src/ts/carousel.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","responsive_map_1","Options","options","this","count","padding","touch","buttons","dots","rewind","autoplay","prop","responsive","ResponsiveMap","getBreakpointOptions","screenWidth","innerWidth","document","body","clientWidth","matchOption","matchBreakpoint","option","breakpoint","parseInt","EventEmitter","listeners","on","event","listener","bucket","push","trigger","data","_i","bucket_1","length","off","Touch","contentElement","stage","firstX","previousX","previousY","distanceX","distanceY","minDistance","state","addEventListener","onTouchStart","passive","onTouchMove","onTouchEnd","update","currentOptions","touches","clientX","clientY","deltaX","deltaY","Math","abs","dragDistance","horizontalDrag","cancelable","preventDefault","drag","movedLeft","dragEnd","Dots","carouselElement","createContainer","dotsContainer","className","createDots","updateActive","createElement","appendChild","dotCount","html","index","ceil","min","last","innerHTML","querySelectorAll","onDotClick","dot","parseFloat","getAttribute","nextIndex","nextDot","clazz","current","setAttribute","target","moveTo","Buttons","previousButton","createButton","nextButton","insertBefore","onPreviousClick","onNextClick","element","move","Autoplay","intervalId","mouseOver","onMouseEnter","onMouseLeave","clearInterval","setInterval","onInterval","remove","Tween","translate","x","y","duration","_this","source","getTranslate","animate","progress","interpolate","setTranslate","callback","start","Date","getTime","loop","relative","requestFrame","style","transform","match","exec","requestAnimationFrame","setTimeout","dest","amount","easeInOutQuad","b","event_emitter_1","tween_1","Stage","_super","stageElement","itemElements","currentIndex","currentPosition","__extends","contentSize","getBoundingClientRect","width","itemSize","stageSize","delta","tween","lastIndex","max","lastPosition","floor","options_1","map","globalOptions","responsiveOptions","stage_1","autoplay_1","buttons_1","dots_1","touch_1","Carousel","elementOrSelector","querySelector","Error","createContainers","onWindowResizeListener","onWindowResize","onStageMove","onCarouselPrevious","onCarouselNext","onCarouselGoto","removeEventListener"],"mappings":"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","file":"latte-carousel.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"latte\"] = factory();\n\telse\n\t\troot[\"latte\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","import { ResponsiveMap } from \"./responsive-map\";\r\n\r\n/**\r\n * Carousel options.\r\n *\r\n * @export\r\n * @class Options\r\n */\r\nexport class Options {\r\n    public count: number = 3;\r\n    public padding: number = 0;\r\n    public touch: boolean = false;\r\n    public buttons: boolean = true;\r\n    public dots: boolean = false;\r\n    public rewind: boolean = true;\r\n    public autoplay: number = 0;\r\n\r\n    public responsive: ResponsiveMap;\r\n\r\n    /**\r\n     * Creates an instance of Options.\r\n     * @param {Options} [options] Options to copy properties.\r\n     * @memberof Options\r\n     */\r\n    constructor(options?: Options) {\r\n        if (options == null) {\r\n            return;\r\n        }\r\n\r\n        for (const prop in options) {\r\n            if (options.hasOwnProperty(prop) && prop !== \"responsive\") {\r\n                (this as any)[prop] = (options as any)[prop];\r\n            }\r\n        }\r\n\r\n        // Copy responsive properties\r\n        if (options.responsive != null) {\r\n            this.responsive = new ResponsiveMap(options.responsive, this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Finds options based on current breakpoint (screen width).\r\n     *\r\n     * @returns {Options} Carousel options.\r\n     * @memberof Options\r\n     */\r\n    public getBreakpointOptions(): Options {\r\n        if (this.responsive == null) {\r\n            return this;\r\n        }\r\n\r\n        // Get current screen width\r\n        const screenWidth = window.innerWidth || document.body.clientWidth;\r\n\r\n        // Find matched breakpoint option\r\n        let matchOption: Options = null;\r\n        let matchBreakpoint = 0;\r\n\r\n        for (const key in this.responsive) {\r\n            if (this.responsive.hasOwnProperty(key)) {\r\n                const option = this.responsive[key];\r\n                const breakpoint = parseInt(key, 10);\r\n\r\n                if (breakpoint >= matchBreakpoint && breakpoint <= screenWidth) {\r\n                    matchOption = option;\r\n                    matchBreakpoint = breakpoint;\r\n                }\r\n            }\r\n        }\r\n\r\n        return matchOption;\r\n    }\r\n}\r\n","import { IListenerMap } from \"./listener-map\";\r\n\r\n/**\r\n * Basic event emitter implementation.\r\n *\r\n * @export\r\n * @class EventEmitter\r\n */\r\nexport class EventEmitter {\r\n    private listeners: IListenerMap = {};\r\n\r\n    /**\r\n     * Adds a new event listener.\r\n     *\r\n     * @param {string} event Event type.\r\n     * @param {(data?: any) => void} listener Event listener.\r\n     * @memberof EventEmitter\r\n     */\r\n    public on(event: string, listener: (data?: any) => void) {\r\n        let bucket = this.listeners[event];\r\n\r\n        if (bucket == null) {\r\n            this.listeners[event] = bucket = [];\r\n        }\r\n\r\n        bucket.push(listener);\r\n    }\r\n\r\n    /**\r\n     * Triggers all listeners by event type.\r\n     *\r\n     * @param {string} event Event type.\r\n     * @param {*} [data] Event data.\r\n     * @memberof EventEmitter\r\n     */\r\n    public trigger(event: string, data?: any) {\r\n        const bucket = this.listeners[event];\r\n\r\n        if (bucket != null) {\r\n            for (const listener of bucket) {\r\n                listener(data);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clears all listeners.\r\n     *\r\n     * @memberof EventEmitter\r\n     */\r\n    public off() {\r\n        this.listeners = {};\r\n    }\r\n}\r\n","import { Options } from \"../option/options\";\r\nimport { Stage } from \"../stage\";\r\n\r\n/**\r\n * Touch support.\r\n *\r\n * @export\r\n * @class Touch\r\n */\r\nexport class Touch {\r\n    private currentOptions: Options;\r\n\r\n    private firstX = 0;\r\n    private previousX = 0;\r\n    private previousY = 0;\r\n\r\n    private distanceX = 0;\r\n    private distanceY = 0;\r\n    private minDistance = 20;\r\n\r\n    private state: \"free\" | \"drag\" | \"lock\" = \"free\";\r\n\r\n    /**\r\n     * Creates an instance of Touch.\r\n     * @param {HTMLElement} contentElement Content element.\r\n     * @param {Stage} stage Carousel stage.\r\n     * @param {Options} options Carousel options.\r\n     * @memberof Touch\r\n     */\r\n    constructor(private contentElement: HTMLElement, private stage: Stage, private options: Options) {\r\n        this.contentElement.addEventListener(\"touchstart\", this.onTouchStart.bind(this), { passive: true });\r\n        this.contentElement.addEventListener(\"touchmove\", this.onTouchMove.bind(this));\r\n        this.contentElement.addEventListener(\"touchend\", this.onTouchEnd.bind(this), { passive: true });\r\n\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Updates touch support.\r\n     *\r\n     * @memberof Touch\r\n     */\r\n    public update() {\r\n        this.currentOptions = this.options.getBreakpointOptions();\r\n    }\r\n\r\n    /**\r\n     * Touch start listener.\r\n     *\r\n     * @private\r\n     * @param {TouchEvent} event Touch event.\r\n     * @memberof Touch\r\n     */\r\n    private onTouchStart(event: TouchEvent) {\r\n        const touch = event.touches[0];\r\n\r\n        this.firstX = this.previousX = touch.clientX;\r\n        this.previousY = touch.clientY;\r\n\r\n        this.distanceX = this.distanceY = 0;\r\n    }\r\n\r\n    /**\r\n     * Touch move listener.\r\n     *\r\n     * @private\r\n     * @param {TouchEvent} event Touch event.\r\n     * @memberof Touch\r\n     */\r\n    private onTouchMove(event: TouchEvent) {\r\n        const touch = event.touches[0];\r\n\r\n        const deltaX = touch.clientX - this.previousX;\r\n        const deltaY = touch.clientY - this.previousY;\r\n\r\n        this.distanceX += Math.abs(deltaX);\r\n        this.distanceY += Math.abs(deltaY);\r\n\r\n        const dragDistance = this.distanceX > this.minDistance || this.distanceY > this.minDistance;\r\n        const horizontalDrag = this.distanceX > this.distanceY;\r\n\r\n        if (this.currentOptions.touch) {\r\n            // Check for minimum distance and horizontal drag\r\n            if (this.state === \"free\" && dragDistance) {\r\n                if (horizontalDrag) {\r\n                    this.state = \"drag\";\r\n                } else {\r\n                    this.state = \"lock\";\r\n                }\r\n            }\r\n\r\n            // Lock scroll on touch move\r\n            if (this.state === \"drag\") {\r\n                if (event.cancelable) {\r\n                    event.preventDefault();\r\n                }\r\n\r\n                this.stage.drag(deltaX);\r\n            }\r\n        }\r\n\r\n        this.previousX = touch.clientX;\r\n        this.previousY = touch.clientY;\r\n    }\r\n\r\n    /**\r\n     * Touch end listener.\r\n     *\r\n     * @private\r\n     * @param {TouchEvent} event Touch event.\r\n     * @memberof Touch\r\n     */\r\n    private onTouchEnd(event: TouchEvent) {\r\n        const movedLeft = this.firstX > this.previousX;\r\n\r\n        // Prevent disabling touch while dragging\r\n        if (this.currentOptions.touch || this.state === \"drag\") {\r\n            this.state = \"free\";\r\n\r\n            this.stage.dragEnd(movedLeft);\r\n        }\r\n    }\r\n}\r\n","import { Options } from \"../option/options\";\r\nimport { Stage } from \"../stage\";\r\n\r\n/**\r\n * Carousel navigation dots.\r\n *\r\n * @export\r\n * @class Dots\r\n */\r\nexport class Dots {\r\n    private currentOptions: Options;\r\n\r\n    private dotsContainer: HTMLElement;\r\n    private dots: NodeListOf<HTMLElement>;\r\n\r\n    /**\r\n     * Creates an instance of Dots.\r\n     * @param {HTMLElement} carouselElement Carousel element.\r\n     * @param {Stage} stage Carousel stage.\r\n     * @param {Options} options Carousel options.\r\n     * @memberof Dots\r\n     */\r\n    constructor(private carouselElement: HTMLElement, private stage: Stage, private options: Options) {\r\n        this.createContainer();\r\n\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Updates carousel dots.\r\n     *\r\n     * @memberof Dots\r\n     */\r\n    public update() {\r\n        this.currentOptions = this.options.getBreakpointOptions();\r\n\r\n        if (this.currentOptions.dots === true) {\r\n            this.dotsContainer.className = \"latte-dots\";\r\n\r\n            this.createDots();\r\n\r\n            this.updateActive();\r\n        } else {\r\n            this.dotsContainer.className = \"latte-dots invisible\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates the dots container.\r\n     *\r\n     * @private\r\n     * @memberof Dots\r\n     */\r\n    private createContainer() {\r\n        this.dotsContainer = document.createElement(\"div\");\r\n        this.dotsContainer.className = \"latte-dots\";\r\n\r\n        this.carouselElement.appendChild(this.dotsContainer);\r\n    }\r\n\r\n    /**\r\n     * Creates the dots itself.\r\n     *\r\n     * @private\r\n     * @memberof Dots\r\n     */\r\n    private createDots() {\r\n        const count = this.dotCount();\r\n\r\n        // Avoid recreation\r\n        if (this.dots != null && this.dots.length === count) {\r\n            return;\r\n        }\r\n\r\n        // Build elements\r\n        let html = \"\";\r\n\r\n        for (let i = 0; i < count; i++) {\r\n            let index = i * Math.ceil(this.currentOptions.count);\r\n            index = Math.min(index, this.stage.last());\r\n\r\n            html += `<div class=\"latte-dot\" data-index=${index}></div>`;\r\n        }\r\n\r\n        this.dotsContainer.innerHTML = html;\r\n\r\n        this.dots = this.dotsContainer.querySelectorAll(\".latte-dot\");\r\n\r\n        // Add events\r\n        for (let i = 0; i < this.dots.length; i++) {\r\n            const dot = this.dots[i];\r\n\r\n            dot.addEventListener(\"click\", this.onDotClick.bind(this));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the active navigation dot.\r\n     *\r\n     * @private\r\n     * @memberof Dots\r\n     */\r\n    private updateActive() {\r\n        for (let i = 0; i < this.dots.length; i++) {\r\n            // Index bounds\r\n            const dot = this.dots[i];\r\n            const index = parseFloat(dot.getAttribute(\"data-index\"));\r\n\r\n            let nextIndex;\r\n            if (i + 1 < this.dots.length) {\r\n                const nextDot = this.dots[i + 1];\r\n                nextIndex = parseFloat(nextDot.getAttribute(\"data-index\"));\r\n            }\r\n\r\n            // Active class\r\n            const active = this.stage.current() >= index && (nextIndex == null || this.stage.current() < nextIndex);\r\n\r\n            const clazz = \"latte-dot\" + (active ? \" active\" : \"\");\r\n\r\n            dot.setAttribute(\"class\", clazz);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns navigation dot count.\r\n     *\r\n     * @private\r\n     * @returns {number} Dot count.\r\n     * @memberof Dots\r\n     */\r\n    private dotCount(): number {\r\n        return Math.ceil(this.stage.count() / Math.ceil(this.currentOptions.count));\r\n    }\r\n\r\n    /**\r\n     * Dot click listener.\r\n     *\r\n     * @private\r\n     * @param {MouseEvent} event Mouse event.\r\n     * @memberof Dots\r\n     */\r\n    private onDotClick(event: MouseEvent) {\r\n        const dot = event.target as HTMLElement;\r\n        const index = parseFloat(dot.getAttribute(\"data-index\"));\r\n\r\n        this.stage.moveTo(index);\r\n\r\n        this.updateActive();\r\n    }\r\n}\r\n","import { Options } from \"../option/options\";\r\nimport { Stage } from \"../stage\";\r\n\r\n/**\r\n * Carousel buttons.\r\n *\r\n * @export\r\n * @class Buttons\r\n */\r\nexport class Buttons {\r\n    private currentOptions: Options;\r\n\r\n    private previousButton: HTMLElement;\r\n    private nextButton: HTMLElement;\r\n\r\n    /**\r\n     * Creates an instance of Buttons.\r\n     * @param {HTMLElement} carouselElement Carousel element.\r\n     * @param {HTMLElement} contentElement Content element.\r\n     * @param {Stage} stage Carousel stage.\r\n     * @param {Options} options Carousel options.\r\n     * @memberof Buttons\r\n     */\r\n    constructor(\r\n        private carouselElement: HTMLElement,\r\n        private contentElement: HTMLElement,\r\n        private stage: Stage,\r\n        private options: Options,\r\n    ) {\r\n        this.previousButton = this.createButton(\"latte-previous\");\r\n        this.nextButton = this.createButton(\"latte-next\");\r\n\r\n        this.carouselElement.insertBefore(this.previousButton, this.contentElement);\r\n        this.carouselElement.appendChild(this.nextButton);\r\n\r\n        this.previousButton.addEventListener(\"click\", this.onPreviousClick.bind(this));\r\n        this.nextButton.addEventListener(\"click\", this.onNextClick.bind(this));\r\n\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Updates carousel buttons.\r\n     *\r\n     * @memberof Buttons\r\n     */\r\n    public update() {\r\n        this.currentOptions = this.options.getBreakpointOptions();\r\n\r\n        if (this.currentOptions.buttons === true) {\r\n            this.previousButton.className = \"latte-previous\";\r\n            this.nextButton.className = \"latte-next\";\r\n        } else {\r\n            this.previousButton.className = \"latte-previous invisible\";\r\n            this.nextButton.className = \"latte-next invisible\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates a new button.\r\n     *\r\n     * @private\r\n     * @param {string} clazz Element class.\r\n     * @returns {HTMLElement} Element created.\r\n     * @memberof Buttons\r\n     */\r\n    private createButton(clazz: string): HTMLElement {\r\n        const element = document.createElement(\"div\");\r\n        element.className = clazz;\r\n\r\n        return element;\r\n    }\r\n\r\n    /**\r\n     * Previous click listener.\r\n     *\r\n     * @private\r\n     * @param {MouseEvent} event Mouse event.\r\n     * @memberof Buttons\r\n     */\r\n    private onPreviousClick(event: MouseEvent) {\r\n        this.stage.move(-1);\r\n    }\r\n\r\n    /**\r\n     * Next click listener.\r\n     *\r\n     * @private\r\n     * @param {MouseEvent} event Mouse event.\r\n     * @memberof Buttons\r\n     */\r\n    private onNextClick(event: MouseEvent) {\r\n        this.stage.move(1);\r\n    }\r\n}\r\n","import { Options } from \"../option/options\";\r\nimport { Stage } from \"../stage\";\r\n\r\n/**\r\n * Carousel autoplay.\r\n *\r\n * @export\r\n * @class Autoplay\r\n */\r\nexport class Autoplay {\r\n    private currentOptions: Options;\r\n\r\n    private intervalId: number = 0;\r\n    private mouseOver: boolean = false;\r\n\r\n    /**\r\n     * Creates an instance of Autoplay.\r\n     * @param {HTMLElement} contentElement Content element.\r\n     * @param {Stage} stage Carousel stage.\r\n     * @param {Options} options Carousel options.\r\n     * @memberof Autoplay\r\n     */\r\n    constructor(private contentElement: HTMLElement, private stage: Stage, private options: Options) {\r\n        this.contentElement.addEventListener(\"mouseenter\", this.onMouseEnter.bind(this));\r\n        this.contentElement.addEventListener(\"mouseleave\", this.onMouseLeave.bind(this));\r\n\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Updates carousel autoplay.\r\n     *\r\n     * @memberof Autoplay\r\n     */\r\n    public update() {\r\n        this.currentOptions = this.options.getBreakpointOptions();\r\n\r\n        // Clear current interval\r\n        if (this.intervalId > 0) {\r\n            clearInterval(this.intervalId);\r\n        }\r\n\r\n        if (this.currentOptions.autoplay > 0) {\r\n            this.intervalId = setInterval(this.onInterval.bind(this), this.currentOptions.autoplay);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes autoplay.\r\n     *\r\n     * @memberof Autoplay\r\n     */\r\n    public remove() {\r\n        if (this.intervalId > 0) {\r\n            clearInterval(this.intervalId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Interval listener.\r\n     *\r\n     * @private\r\n     * @memberof Autoplay\r\n     */\r\n    private onInterval() {\r\n        if (!this.mouseOver) {\r\n            this.stage.move(1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Mouse enter listener.\r\n     *\r\n     * @private\r\n     * @memberof Autoplay\r\n     */\r\n    private onMouseEnter() {\r\n        this.mouseOver = true;\r\n    }\r\n\r\n    /**\r\n     * Mouse leave listener.\r\n     *\r\n     * @private\r\n     * @memberof Autoplay\r\n     */\r\n    private onMouseLeave() {\r\n        this.mouseOver = false;\r\n    }\r\n}\r\n","/**\r\n * Basic tweening implementation.\r\n *\r\n * @export\r\n * @class Tween\r\n */\r\nexport class Tween {\r\n    /**\r\n     * Translates the element to position.\r\n     *\r\n     * @static\r\n     * @param {HTMLElement} element Element to translate.\r\n     * @param {number} x X position.\r\n     * @param {number} y Y position.\r\n     * @param {number} duration Duration in millis.\r\n     * @memberof Tween\r\n     */\r\n    public static translate(element: HTMLElement, x: number, y: number, duration: number) {\r\n        const source = this.getTranslate(element);\r\n\r\n        this.animate(duration, (progress) => {\r\n            const value = {\r\n                x: this.interpolate(source.x, x, progress),\r\n                y: this.interpolate(source.y, y, progress),\r\n            };\r\n\r\n            this.setTranslate(element, value);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Animates using callback loop.\r\n     *\r\n     * @private\r\n     * @static\r\n     * @param {number} duration Duration in millis.\r\n     * @param {(progress: number) => void} callback Animation callback.\r\n     * @memberof Tween\r\n     */\r\n    private static animate(duration: number, callback: (progress: number) => void) {\r\n        if (duration === 0) {\r\n            callback(1);\r\n            return;\r\n        }\r\n\r\n        const start = new Date().getTime();\r\n\r\n        const loop = () => {\r\n            const now = new Date().getTime();\r\n            const relative = (now - start) / duration;\r\n            const progress = Math.min(relative, 1);\r\n\r\n            callback(progress);\r\n\r\n            if (progress < 1) {\r\n                this.requestFrame(loop);\r\n            }\r\n        };\r\n\r\n        this.requestFrame(loop);\r\n    }\r\n\r\n    /**\r\n     * Gets current translate value.\r\n     *\r\n     * @private\r\n     * @static\r\n     * @param {HTMLElement} element Element to get value.\r\n     * @returns {{ x: number, y: number }} Translate value.\r\n     * @memberof Tween\r\n     */\r\n    private static getTranslate(element: HTMLElement): { x: number; y: number } {\r\n        const source = { x: 0, y: 0 };\r\n\r\n        const regex = /translate\\(([0-9.-]+)px,\\s?([0-9.-]+)px\\)/;\r\n        const value = (element.style as any)[\"-ms-transform\"] || element.style.transform;\r\n\r\n        if (value != null) {\r\n            const match = regex.exec(value);\r\n\r\n            if (match != null) {\r\n                source.x = parseFloat(match[1]);\r\n                source.y = parseFloat(match[2]);\r\n            }\r\n        }\r\n\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * Sets translate value.\r\n     *\r\n     * @private\r\n     * @static\r\n     * @param {HTMLElement} element Element to set value.\r\n     * @param {{ x: number, y: number }} value Translate value.\r\n     * @memberof Tween\r\n     */\r\n    private static setTranslate(element: HTMLElement, value: { x: number; y: number }) {\r\n        const transform = `translate(${Math.ceil(value.x)}px, ${Math.ceil(value.y)}px)`;\r\n\r\n        (element.style as any)[\"-ms-transform\"] = transform;\r\n        element.style.transform = transform;\r\n    }\r\n\r\n    /**\r\n     * Request animation frame helper.\r\n     *\r\n     * @private\r\n     * @static\r\n     * @param {() => void} callback Animation frame callback.\r\n     * @memberof Tween\r\n     */\r\n    private static requestFrame(callback: () => void) {\r\n        if (requestAnimationFrame != null) {\r\n            requestAnimationFrame(callback);\r\n        } else {\r\n            window.setTimeout(callback, 1000 / 60);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Interpolates two numbers.\r\n     *\r\n     * @private\r\n     * @static\r\n     * @param {number} source Source value.\r\n     * @param {number} dest Destination value.\r\n     * @param {number} amount Percentage.\r\n     * @returns {number} Interpolated value.\r\n     * @memberof Tween\r\n     */\r\n    private static interpolate(source: number, dest: number, amount: number): number {\r\n        return this.easeInOutQuad(amount, source, dest - source, 1);\r\n    }\r\n\r\n    /**\r\n     * Quadratic easing in/out function.\r\n     * Inspired from: http://robertpenner.com/easing/penner_easing_as1.txt\r\n     *\r\n     * @private\r\n     * @static\r\n     * @param {number} t Time.\r\n     * @param {number} b Base value.\r\n     * @param {number} c Change in value.\r\n     * @param {number} d Duration.\r\n     * @returns {number} Interpolated value.\r\n     * @memberof Tween\r\n     */\r\n    private static easeInOutQuad(t: number, b: number, c: number, d: number): number {\r\n        t /= d / 2;\r\n        if (t < 1) {\r\n            return (c / 2) * t * t + b;\r\n        }\r\n        t--;\r\n        return (-c / 2) * (t * (t - 2) - 1) + b;\r\n    }\r\n}\r\n","import { EventEmitter } from \"./event/event-emitter\";\r\nimport { Options } from \"./option/options\";\r\nimport { Tween } from \"./tween\";\r\n\r\n/**\r\n * Base carousel stage.\r\n *\r\n * @export\r\n * @class Stage\r\n * @extends {EventEmitter}\r\n */\r\nexport class Stage extends EventEmitter {\r\n    private currentOptions: Options;\r\n\r\n    private currentIndex: number = 0;\r\n    private currentPosition: number = 0;\r\n\r\n    private contentSize: number;\r\n    private stageSize: number;\r\n    private itemSize: number;\r\n\r\n    /**\r\n     * Creates an instance of Stage.\r\n     * @param {HTMLElement} contentElement Content element.\r\n     * @param {HTMLElement} stageElement Stage element.\r\n     * @param {NodeListOf<HTMLElement>} itemElements Items elements.\r\n     * @param {Options} options Carousel options.\r\n     * @memberof Stage\r\n     */\r\n    constructor(\r\n        private contentElement: HTMLElement,\r\n        private stageElement: HTMLElement,\r\n        private itemElements: NodeListOf<HTMLElement>,\r\n        private options: Options,\r\n    ) {\r\n        super();\r\n\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Updates stage computing options and position.\r\n     *\r\n     * @memberof Stage\r\n     */\r\n    public update() {\r\n        this.currentOptions = this.options.getBreakpointOptions();\r\n\r\n        // Compute size\r\n        this.contentSize = this.contentElement.getBoundingClientRect().width;\r\n        this.itemSize = this.contentSize / this.currentOptions.count;\r\n        this.stageSize = this.itemSize * this.itemElements.length;\r\n\r\n        // Apply size\r\n        for (let i = 0; i < this.itemElements.length; i++) {\r\n            this.itemElements[i].style.width = this.itemSize + \"px\";\r\n        }\r\n\r\n        this.stageElement.style.width = this.stageSize + \"px\";\r\n\r\n        // Adjust position\r\n        this.move(0, false);\r\n    }\r\n\r\n    /**\r\n     * Moves stage to relative index.\r\n     *\r\n     * @param {number} delta Index delta.\r\n     * @param {boolean} [tween=true] Use tweening\r\n     * @memberof Stage\r\n     */\r\n    public move(delta: number, tween: boolean = true) {\r\n        this.moveTo(this.currentIndex + delta, tween);\r\n    }\r\n\r\n    /**\r\n     * Moves stage to absolute index.\r\n     *\r\n     * @param {number} index Index.\r\n     * @param {boolean} [tween=true] Use tweening\r\n     * @memberof Stage\r\n     */\r\n    public moveTo(index: number, tween: boolean = true) {\r\n        const firstIndex = 0;\r\n        const lastIndex = this.last();\r\n\r\n        // Rewind index\r\n        if (this.currentOptions.rewind) {\r\n            index = index % (lastIndex + 1);\r\n\r\n            if (index < 0) {\r\n                index = lastIndex + 1 + index;\r\n            }\r\n        }\r\n\r\n        // Compute position by index\r\n        this.currentIndex = index;\r\n        this.currentIndex = Math.min(Math.max(firstIndex, this.currentIndex), lastIndex);\r\n        this.currentPosition = this.currentIndex * this.itemSize * -1;\r\n\r\n        const duration = tween ? 300 : 0;\r\n        Tween.translate(this.stageElement, this.currentPosition, 0, duration);\r\n\r\n        this.trigger(\"move\");\r\n    }\r\n\r\n    /**\r\n     * Drags stage to relative position.\r\n     *\r\n     * @param {number} delta Position delta.\r\n     * @memberof Stage\r\n     */\r\n    public drag(delta: number) {\r\n        const lastIndex = this.last();\r\n\r\n        const firstPosition = 0;\r\n        const lastPosition = lastIndex * this.itemSize * -1;\r\n\r\n        // Change position only\r\n        this.currentPosition += delta;\r\n        this.currentPosition = Math.min(Math.max(lastPosition, this.currentPosition), firstPosition);\r\n\r\n        Tween.translate(this.stageElement, this.currentPosition, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * Finishes carousel drag.\r\n     *\r\n     * @param {boolean} movedLeft If carousel moved to the left.\r\n     * @memberof Stage\r\n     */\r\n    public dragEnd(movedLeft: boolean) {\r\n        // Compute index by position\r\n        if (movedLeft) {\r\n            this.currentIndex = Math.ceil(Math.abs(this.currentPosition) / this.itemSize);\r\n        } else {\r\n            this.currentIndex = Math.floor(Math.abs(this.currentPosition) / this.itemSize);\r\n        }\r\n\r\n        this.move(0);\r\n    }\r\n\r\n    /**\r\n     * Returns carousel item count.\r\n     *\r\n     * @returns {number} Item count.\r\n     * @memberof Stage\r\n     */\r\n    public count(): number {\r\n        return this.itemElements.length;\r\n    }\r\n\r\n    /**\r\n     * Returns current index.\r\n     *\r\n     * @returns {number} Current index.\r\n     * @memberof Stage\r\n     */\r\n    public current(): number {\r\n        return this.currentIndex;\r\n    }\r\n\r\n    /**\r\n     * Returns last index.\r\n     *\r\n     * @returns {number} Last index.\r\n     * @memberof Stage\r\n     */\r\n    public last(): number {\r\n        return this.itemElements.length - this.currentOptions.count;\r\n    }\r\n}\r\n","import { Options } from \"./options\";\r\n\r\n/**\r\n * Responsive options map.\r\n *\r\n * @export\r\n * @class ResponsiveMap\r\n */\r\nexport class ResponsiveMap {\r\n    [breakpoint: string]: Options;\r\n\r\n    /**\r\n     * Creates an instance of ResponsiveMap.\r\n     * @param {ResponsiveMap} [map] Map to copy properties.\r\n     * @param {Options} [globalOptions] Options to use as default.\r\n     * @memberof ResponsiveMap\r\n     */\r\n    constructor(map?: ResponsiveMap, globalOptions?: Options) {\r\n        if (map == null) {\r\n            return;\r\n        }\r\n\r\n        // Instantiate options keeping global properties.\r\n        for (const breakpoint in map) {\r\n            if (map.hasOwnProperty(breakpoint)) {\r\n                const responsiveOptions = new Options((map as any)[breakpoint]);\r\n\r\n                // Copy from global options\r\n                if (globalOptions != null) {\r\n                    for (const prop in globalOptions) {\r\n                        if (\r\n                            globalOptions.hasOwnProperty(prop) &&\r\n                            prop !== \"responsive\" &&\r\n                            (map as any)[breakpoint][prop] == null\r\n                        ) {\r\n                            (responsiveOptions as any)[prop] = (globalOptions as any)[prop];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                (this as any)[breakpoint] = responsiveOptions;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { EventEmitter } from \"./event/event-emitter\";\r\nimport { Options } from \"./option/options\";\r\nimport { Stage } from \"./stage\";\r\nimport { Autoplay } from \"./ui/autoplay\";\r\nimport { Buttons } from \"./ui/buttons\";\r\nimport { Dots } from \"./ui/dots\";\r\nimport { Touch } from \"./ui/touch\";\r\n\r\n// tslint:disable-next-line\r\nrequire(\"../scss/style.scss\");\r\n\r\n/**\r\n * Base carousel class.\r\n *\r\n * @export\r\n * @class Carousel\r\n * @extends {EventEmitter}\r\n */\r\nexport class Carousel extends EventEmitter {\r\n    private carouselElement: HTMLElement;\r\n    private contentElement: HTMLElement;\r\n    private stageElement: HTMLElement;\r\n    private itemElements: NodeListOf<HTMLElement>;\r\n\r\n    private options: Options;\r\n    private stage: Stage;\r\n    private touch: Touch;\r\n    private buttons: Buttons;\r\n    private dots: Dots;\r\n    private autoplay: Autoplay;\r\n\r\n    private onWindowResizeListener: (event: UIEvent) => void;\r\n\r\n    /**\r\n     * Creates an instance of Carousel.\r\n     * @param {(string | HTMLElement)} elementOrSelector Root carousel element or selector.\r\n     * @param {Options} [options] Carousel options.\r\n     * @memberof Carousel\r\n     */\r\n    constructor(elementOrSelector: string | HTMLElement, options?: Options) {\r\n        super();\r\n\r\n        if (typeof elementOrSelector === \"string\") {\r\n            this.carouselElement = document.querySelector(elementOrSelector);\r\n        } else {\r\n            this.carouselElement = elementOrSelector;\r\n        }\r\n\r\n        if (this.carouselElement == null) {\r\n            throw new Error(\"Missing root latte-carousel element.\");\r\n        }\r\n\r\n        this.createContainers();\r\n\r\n        this.contentElement = this.carouselElement.querySelector(\".latte-content\");\r\n        this.stageElement = this.contentElement.querySelector(\".latte-stage\");\r\n        this.itemElements = this.stageElement.querySelectorAll(\".latte-item\");\r\n\r\n        this.options = new Options(options);\r\n        this.stage = new Stage(this.contentElement, this.stageElement, this.itemElements, this.options);\r\n        this.touch = new Touch(this.contentElement, this.stage, this.options);\r\n        this.buttons = new Buttons(this.carouselElement, this.contentElement, this.stage, this.options);\r\n        this.dots = new Dots(this.carouselElement, this.stage, this.options);\r\n        this.autoplay = new Autoplay(this.contentElement, this.stage, this.options);\r\n\r\n        this.onWindowResizeListener = this.onWindowResize.bind(this);\r\n\r\n        window.addEventListener(\"resize\", this.onWindowResizeListener);\r\n\r\n        this.stage.on(\"move\", this.onStageMove.bind(this));\r\n\r\n        this.update();\r\n\r\n        this.on(\"previous\", this.onCarouselPrevious.bind(this));\r\n        this.on(\"next\", this.onCarouselNext.bind(this));\r\n        this.on(\"goto\", this.onCarouselGoto.bind(this));\r\n    }\r\n\r\n    /**\r\n     * Removes carousel.\r\n     *\r\n     * @memberof Carousel\r\n     */\r\n    public remove() {\r\n        this.autoplay.remove();\r\n\r\n        window.removeEventListener(\"resize\", this.onWindowResizeListener);\r\n\r\n        this.off();\r\n\r\n        this.carouselElement.remove();\r\n    }\r\n\r\n    /**\r\n     * Creates content and stage containers.\r\n     *\r\n     * @private\r\n     * @memberof Carousel\r\n     */\r\n    private createContainers() {\r\n        this.carouselElement.innerHTML = `\r\n            <div class=\"latte-content\">\r\n                <div class=\"latte-stage\">\r\n                    ${this.carouselElement.innerHTML}\r\n                </div>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Updates carousel.\r\n     *\r\n     * @private\r\n     * @memberof Carousel\r\n     */\r\n    private update() {\r\n        this.stage.update();\r\n\r\n        this.touch.update();\r\n\r\n        this.buttons.update();\r\n\r\n        this.dots.update();\r\n\r\n        this.autoplay.update();\r\n    }\r\n\r\n    /**\r\n     * Window resize listener.\r\n     *\r\n     * @private\r\n     * @param {UIEvent} event UI Event.\r\n     * @memberof Carousel\r\n     */\r\n    private onWindowResize(event: UIEvent) {\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Stage move listener.\r\n     *\r\n     * @private\r\n     * @param {*} data Event data.\r\n     * @memberof Carousel\r\n     */\r\n    private onStageMove(data: any) {\r\n        this.dots.update();\r\n    }\r\n\r\n    /**\r\n     * Carousel previous listener.\r\n     *\r\n     * @private\r\n     * @param {*} data Event data.\r\n     * @memberof Carousel\r\n     */\r\n    private onCarouselPrevious(data: any) {\r\n        this.stage.move(-1);\r\n    }\r\n\r\n    /**\r\n     * Carousel next listener.\r\n     *\r\n     * @private\r\n     * @param {*} data Event data.\r\n     * @memberof Carousel\r\n     */\r\n    private onCarouselNext(data: any) {\r\n        this.stage.move(1);\r\n    }\r\n\r\n    /**\r\n     * Carousel goto listener.\r\n     *\r\n     * @private\r\n     * @param {*} data Event data.\r\n     * @memberof Carousel\r\n     */\r\n    private onCarouselGoto(data: any) {\r\n        this.stage.moveTo(data as number);\r\n    }\r\n}\r\n"],"sourceRoot":""}